AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: .Net Core 2.0 Single user handler for SQL Server secret rotation using AWS Secrets Manager.
Parameters:
  Subnets:
    Type: CommaDelimitedList
    Description: |
      Comma seperated list of VPC subnet IDs that the lambda function will launch in. The subnets provided must have network access to the SQL 
      Server where the password will be rotated
  SecurityGroupId:
    Type: String
    Description: Security Group ID that allows access to the SQL Server DB. Note that the function needs outbound network access to AWS Secrets Manager public API endpoints.
Resources:
  rotateMSSQL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: RotateMssql::RotateMssql.Function::FunctionHandler
      Runtime: dotnetcore2.0
      CodeUri: RotateMssql.zip
      FunctionName: SecretsManagerRotateMssql
      Timeout: 30
      MemorySize: 256
      VpcConfig:
        SubnetIds: !Ref Subnets
        SecurityGroupIds:
          - !Ref SecurityGroupId
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Version: 2012-10-17
          Statement:
           - Effect: Allow
             Condition:
               StringEquals:
                 secretsmanager:resource/AllowRotationLambdaArn: 
                   !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:SecretsManagerRotateMssql
             Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecretVersionStage
             Resource:
              - !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
           - Effect: Allow
             Action:
              - secretsmanager:GetRandomPassword
             Resource:
              - '*'

  SecretManagerPermissions:
    Type: AWS::Lambda::Permission
    DependsOn: rotateMSSQL
    Properties:
      FunctionName: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:SecretsManagerRotateMssql
      Action: lambda:InvokeFunction
      Principal: secretsmanager.amazonaws.com
